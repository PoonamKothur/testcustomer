service: cw-customers

stage: ${self:provider.stage}

provider:
  name: aws
  runtime: nodejs10.x
  timeout: 30
  region: ${opt:region, 'us-east-1'}

  environment: 
    STAGE: ${opt:stage}
    
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Get*
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:CreateTable
        - dynamodb:Update*
        - dynamodb:PutItem
      Resource: arn:aws:dynamodb::*:table/customer-${opt:stage}
    - Effect: Allow
      Action:
        - lambda:Invoke
      Resource: '*'


      # Properties:
      #   AttributeDefinitions:
      #     -
      #       AttributeName: cid
      #       AttributeType: s
      #   KeySchema:
      #     -
      #       AttributeName: cid
      #       KeyType: HASH
      #   ProvisionedThroughput:
      #     ReadCapacityUnits: 1
      #     WriteCapacityUnits: 1

functions:
   getcustomerbyid:
    handler: handlers/getcustomerbyid.getcustomer
    events:
      - http:
          path: customerid/{cid}
          method: get
          cors: true

   createcustomer:
    handler: handlers/addcustomer.createcustomer
    enviroment:
      CREATE_CR_LAMBDA_ARN: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:cw-customers-${opt:stage}-createcustomerresources
    events:
      - http:
          path: customerid
          method: post
          cors: true
          
   createcustomerresources:
    handler: handlers/createcustomerresources.createcustomerresources      

plugins:
  - serverless-pseudo-parameters