service: serverless-customer-dynamodb

stage: ${opt:stage}

custom:
    dynamodb:
        start:
            port: 8000
            inMemory: true
            migrate: true
            migration: 
                dir: offline/migrations

provider:
    name: aws
    runtime: nodejs10.x
    timeout: 30
    region: ${opt:region, 'ap-south-1'}
    custom:
    defaultStage: dev
    profiles:
      dev: devProfile
  
environment: 
    DYNAMODB_TABLE: customer
    iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:BatchGet*
        - dynamodb:DescribeStream
        - dynamodb:DescribeTable
        - dynamodb:Get*
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:BatchWrite*
        - dynamodb:CreateTable
        - dynamodb:Delete*
        - dynamodb:Update*
        - dynamodb:PutItem
Resource: arn:aws:dynamodb::*:table/${self:provider.environment.DYNAMODB_TABLE}
Properties:
        AttributeDefinitions:
          -
            AttributeName: cid
            AttributeType: s
        KeySchema:
          -
            AttributeName: cid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

functions:
   getcustomerbyid:
    handler: handlers/getcustomerbyid.getcustomer
    events:
      - http:
          path: /handlers/{id}
          method: get
          cors: true
        